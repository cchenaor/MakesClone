concurrency:
  cancel-in-progress: true
  group: ${{ github.actor }}
jobs:
  linux_all:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: __all__
      with:
        args: sh -c "nix-env -if . && m . __all__"
  mac_all:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: __all__
      run: nix-env -if . && m . __all__

  linux_deployTerraform_module:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /deployTerraform/module
      with:
        args: sh -c "nix-env -if . && m . /deployTerraform/module"
  macos_deployTerraform_module:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /deployTerraform/module
      run: nix-env -if . && m . /deployTerraform/module

  linux_envVars_example:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /envVars/example
      with:
        args: sh -c "nix-env -if . && m . /envVars/example"
  macos_envVars_example:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /envVars/example
      run: nix-env -if . && m . /envVars/example

  linux_formatBash:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /formatBash
      with:
        args: sh -c "nix-env -if . && m . /formatBash"
  macos_formatBash:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /formatBash
      run: nix-env -if . && m . /formatBash

  linux_formatMarkdown:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /formatMarkdown
      with:
        args: sh -c "nix-env -if . && m . /formatMarkdown"

  linux_formatNix:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /formatNix
      with:
        args: sh -c "nix-env -if . && m . /formatNix"
  macos_formatNix:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /formatNix
      run: nix-env -if . && m . /formatNix

  linux_formatPython:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /formatPython
      with:
        args: sh -c "nix-env -if . && m . /formatPython"
  macos_formatPython:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /formatPython
      run: nix-env -if . && m . /formatPython

  linux_formatTerraform:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /formatTerraform
      with:
        args: sh -c "nix-env -if . && m . /formatTerraform"
  macos_formatTerraform:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /formatTerraform
      run: nix-env -if . && m . /formatTerraform

  linux_helloWorld:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /helloWorld
      with:
        args: sh -c "nix-env -if . && m . /helloWorld"
  macos_helloWorld:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /helloWorld
      run: nix-env -if . && m . /helloWorld

  linux_lintBash:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /lintBash
      with:
        args: sh -c "nix-env -if . && m . /lintBash"
  macos_lintBash:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /lintBash
      run: nix-env -if . && m . /lintBash

  linux_lintClojure_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /lintClojure/test
      with:
        args: sh -c "nix-env -if . && m . /lintClojure/test"
  macos_lintClojure_test:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /lintClojure
      run: nix-env -if . && m . /lintClojure/test

  linux_lintGitCommitMsg:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /lintGitCommitMsg
      with:
        args: sh -c "nix-env -if . && m . /lintGitCommitMsg"

  linux_lintGitMailMap:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /lintGitMailMap
      with:
        args: sh -c "nix-env -if . && m . /lintGitMailMap"
  macos_lintGitMailMap:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /lintGitMailMap
      run: nix-env -if . && m . /lintGitMailMap

  linux_lintMarkdown_all:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /lintMarkdown/all
      with:
        args: sh -c "nix-env -if . && m . /lintMarkdown/all"
  macos_lintMarkdown_all:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /lintMarkdown/all
      run: nix-env -if . && m . /lintMarkdown/all

  linux_lintNix:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /lintNix
      with:
        args: sh -c "nix-env -if . && m . /lintNix"
  macos_lintNix:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /lintNix
      run: nix-env -if . && m . /lintNix

  linux_lintPython_dirOfModules_makes:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /lintPython/dirOfModules/makes
      with:
        args: sh -c "nix-env -if . && m . /lintPython/dirOfModules/makes"
  macos_lintPython_dirOfModules_makes:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /lintPython/dirOfModules/makes
      run: nix-env -if . && m . /lintPython/dirOfModules/makes

  linux_lintPython_dirOfModules_makes_main:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /lintPython/dirOfModules/makes/main
      with:
        args: sh -c "nix-env -if . && m . /lintPython/dirOfModules/makes/main"
  macos_lintPython_dirOfModules_makes_main:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /lintPython/dirOfModules/makes/main
      run: nix-env -if . && m . /lintPython/dirOfModules/makes/main

  linux_lintPython_imports_makes:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /lintPython/imports/makes
      with:
        args: sh -c "nix-env -if . && m . /lintPython/imports/makes"
  macos_lintPython_imports_makes:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /lintPython/imports/makes
      run: nix-env -if . && m . /lintPython/imports/makes

  linux_lintPython_module_cliMain:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /lintPython/module/cliMain
      with:
        args: sh -c "nix-env -if . && m . /lintPython/module/cliMain"
  macos_lintPython_module_cliMain:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /lintPython/module/cliMain
      run: nix-env -if . && m . /lintPython/module/cliMain

  linux_lintTerraform_module:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /lintTerraform/module
      with:
        args: sh -c "nix-env -if . && m . /lintTerraform/module"
  macos_lintTerraform_module:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /lintTerraform/module
      run: nix-env -if . && m . /lintTerraform/module

  linux_lintWithAjv_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /lintWithAjv/test
      with:
        args: sh -c "nix-env -if . && m . /lintWithAjv/test"

  linux_lintWithLizard_all:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /lintWithLizard/all
      with:
        args: sh -c "nix-env -if . && m . /lintWithLizard/all"
  macos_lintWithLizard_all:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /lintWithLizard/all
      run: nix-env -if . && m . /lintWithLizard/all

  linux_secretsForEnvFromSops_example:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /secretsForEnvFromSops/example
      with:
        args: sh -c "nix-env -if . && m . /secretsForEnvFromSops/example"
  macos_secretsForEnvFromSops_example:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /secretsForEnvFromSops/example
      run: nix-env -if . && m . /secretsForEnvFromSops/example

  linux_secretsForGpgFromEnv_example:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /secretsForGpgFromEnv/example
      with:
        args: sh -c "nix-env -if . && m . /secretsForGpgFromEnv/example"
  macos_secretsForGpgFromEnv_example:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /secretsForGpgFromEnv/example
      run: nix-env -if . && m . /secretsForGpgFromEnv/example

  linux_securePythonWithBandit_cli:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /securePythonWithBandit/cli
      with:
        args: sh -c "nix-env -if . && m . /securePythonWithBandit/cli"
  macos_securePythonWithBandit_cli:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /securePythonWithBandit/cli
      run: nix-env -if . && m . /securePythonWithBandit/cli

  linux_taintTerraform_module:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /taintTerraform/module
      with:
        args: sh -c "nix-env -if . && m . /taintTerraform/module"
  macos_taintTerraform_module:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /taintTerraform/module
      run: nix-env -if . && m . /taintTerraform/module

  linux_tests_calculateCvss3:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /tests/calculateCvss3
      with:
        args: sh -c "nix-env -if . && m . /tests/calculateCvss3"
  macos_tests_calculateCvss3:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /tests/calculateCvss3
      run: nix-env -if . && m . /tests/calculateCvss3

  linux_tests_secretsForGpgFromEnv:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /tests/secretsForGpgFromEnv
      with:
        args: sh -c "nix-env -if . && m . /tests/secretsForGpgFromEnv"
  macos_tests_secretsForGpgFromEnv:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /tests/secretsForGpgFromEnv
      run: nix-env -if . && m . /tests/secretsForGpgFromEnv

  linux_testTerraform_module:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://docker.io/nixos/nix:2.3.12
      name: /testTerraform/module
      with:
        args: sh -c "nix-env -if . && m . /testTerraform/module"
  macos_testTerraform_module:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: /testTerraform/module
      run: nix-env -if . && m . /testTerraform/module
name: dev
on:
  pull_request:
    branches: [ main ]
